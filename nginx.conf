server {
  server_name jebnicholson.com www.jebnicholson.com;
  access_log /var/log/nginx/jebnicholson.com.log;

  # pass the request to the node.js server with the correct headers
  # and much more can be added, see nginx config options
  root /var/www/html;
  index index.html;

  location ~/promptle$ {
    #add the trailing slash (keeps relative pathes in html happy)
    return 301 $scheme://$host/promptle/;
  }

  location ~/promptle(.*) {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $http_host;
    proxy_set_header X-NginX-Proxy true;

    proxy_pass http://127.0.0.1:5005/promptle/$1$is_args$args;
    #The $1 being captured from the (.*) in the location. Query parameters must be added explicitly.
    proxy_redirect off;
  }

  listen [::]:443 ssl ipv6only=on; # managed by Certbot
  listen 443 ssl; # managed by Certbot
  ssl_certificate /etc/letsencrypt/live/jebnicholson.com/fullchain.pem; # managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/jebnicholson.com/privkey.pem; # managed by Certbot
  include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {

  if ($host = www.jebnicholson.com) {
    return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = jebnicholson.com) {
      return 301 https://$host$request_uri;
      } # managed by Certbot

      listen 80;
      listen [::]:80;
      server_name jebnicholson.com www.jebnicholson.com;
      return 404; # managed by Certbot
    }
